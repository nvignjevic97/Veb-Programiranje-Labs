Лабораториска вежба 1 - за групите со префикс А
Потребно предзнаење

За да разберете како функционираат концептите опфатени во оваа лабораториска вежба, потребно е да прочитате: - Head First Servlets and JSP, Second Edition - Chapter 4: Being a Servlet: request AND response - Chapter 5: Being a Web App: attributes and listeners - Chapter 6: Conversational state: session management - Spring in Action (5th edition) - Chapter 1: Getting started with Spring
Спецификација за лабораториската вежба

    Креирајте нов Spring Boot проект со група mk.finki.ukim.mk и artefactId=lab кој ги има истите зависности како проектот од аудиториските вежби (зависностите може да ги видите во <dependency> тагoвите во pom.xml.
    Дефинирајте пакет mk.ukim.finki.wp.lab.model и во него креирајте ја Order класата. Таа треба да содржи:
        String balloonColor,
        String balloonSize,
        String clientName,
        String clientAddress и
        Long orderId.
    Во mk.ukim.finki.wp.lab.model креирајте Balloon класа која ќе содржи:
        String name,
        String description
    Креирајте класа BalloonRepository во пакетот mk.ukim.finki.wp.lab.repository, во која ќе чувате List<Balloon> иницијализирана со 10 вредности.
        Имплементирајте метод public List<Balloon> findAllBalloons(); кој само ќе ја врати листата.
        Имплементирајте метод public List<Balloon> findAllByNameOrDescription(String text); кој ќе направи пребарување низ листата на балони и ќе ги врати оние во чие име или опис се содржи текстот text кој се праќа како аргумент на методот.

    Дефинирајте ги следните интерфејси во mk.ukim.finki.wp.lab.service кои ќе ги претставуваат бизнис функционалностите на апликацијата:

    public interface BalloonService {
         List<Balloon> listAll();
         List<Balloon> searchByNameOrDescription(String text);
    }

    public interface OrderService{
        Order placeOrder(String balloonColor, String clientName, String address);
    }

    Имплементирајте ги сервисите (BalloonService треба да зависи од BalloonRepository).

    Креирајте сервлет BalloonListSevlet во пакетот mk.ukim.finki.lab.web и мапирајте го на патеката /. Овој сервлет треба да зависи од BalloonService и да ги прикаже сите добиени балони од методот listAll().
        Прилагодете го фајлот listBalloons.html за изгледот на оваа страница.

    <html>
    <head>
        <meta charset="utf-8">
        <title>Balloon Order page - Welcome and choose a Balloon</title>
        <style type="text/css">
            body {
                width: 800px;
                margin: auto;
            }
        </style>
    </head>
    <body>
    <header>
        <h1>Welcome to our Balloon Shop App</h1>
    </header>
    <main>
        <h2>Choose balloon color:</h2>
        <input type="radio" name="color" value="Red Balloon"> Red Balloon<br/>
        <input type="radio" name="color" value="Green Balloon"> Green Balloon<br/>
        <input type="radio" name="color" value="Yellow Balloon"> Yellow Balloon<br/>
        <input type="radio" name="color" value="Blue Balloon"> Blue Balloon<br/>

        <br/>
        <a href="/selectBalloonSize.html">Submit</a>
    </main>
    </body>
    </html>

    При избор на балон, треба да го запаметите изборот. За оваа цел креирајте сервлет SelectBalloonServlet мапиран на /selectBalloon.
        Овој сервлет треба да ја прикажете страната за избор на големина на балон
        Во фолдерот src/main/resources/templates додадете фајл selectBalloonSize.html.
        Во страницата треба да има форма од која ќе се избере големината на балонот.
        Типот на елементите во формата е radio.
        При клик на Submit копчето од оваа форма треба да се повика сервлетот на адресата /BalloonOrder.
        Прилагодете го фајлот selectBalloonSize.html за изгледот на оваа страница.

    <html>
    <head>
        <meta charset="utf-8">
        <title>Balloon Order page - Balloon Size</title>
        <style type = "text/css">
            body {
                width: 800px;
                margin: auto;
            }
            table {
                width:100%;
            }
            table, td, th {
                border: 1px solid black;
                padding:3px 2px;
            }
            section {
                float: left;
                margin: 0 1.5%;
                width: 63%;
            }
            aside {
                float: right;
                margin: 0 1.5%;
                width: 30%;
            }
        </style>
    </head>
    <body>
        <header>
            <h1>Balloon Order page - Select Balloon Size </h1>
        </header>
        <section>
            <h2>Choose balloon size:</h2>
            <input type="radio" name="size" value="Small"> Small <br/>
            <input type="radio" name="size" value="Medium"> Medium <br/>
            <input type="radio" name="size" value="Big"> Big <br/>
            <input type="radio" name="size" value="Extra Big"> Extra Big <br/>
            <br/>
            <a href="/deliveryInfo.html">Submit</a>
        </section>
        <aside>
            <table>
                <tr>
                    <th colspan="2">
                        Your Order Status
                    </th>
                </tr>
                <tr>
                    <td><b>Balloon Type </b></td>
                    <td>Red Balloon</td>
                </tr>
            </table>
        </aside>

    </body>
    </html>

    Креирајте сервлет со име BalloonOrderServlet во пакетот mk.ukim.finki.wp.lab.web и мапирајте го на /BalloonOrder.do патеката.

    Овој сервлет треба да ја постави вредноста за големината на нарачаниот балон во сесија и да го прикаже темплејтот deliveryInfo.html.
        За да поставите информации во сесија, искористете: request.getSession().setAttribute(“yourAttributeName”, attributeValue)
        Прилагодете го фајлот deliveryInfo.html за изгледот на оваа страница.

    <html>
           <head>
               <meta charset="utf-8">
               <title>WP lab - Delivery Info</title>
               <style type="text/css">
                   body {
                       width: 800px;
                       margin: auto;
                   }
                   table {
                       width: 100%;
                   }

                   table, td, th {
                       border: 1px solid black;
                       padding: 3px 2px;
                   }

                   section {
                       float: left;
                       margin: 0 1.5%;
                       width: 63%;
                   }

                   aside {
                       float: right;
                       margin: 0 1.5%;
                       width: 30%;
                   }
               </style>
           </head>
           <body>
               <header>
                   <h1>Balloon Order page - Delivery information </h1>
               </header>
               <section>

                   <form method="" action="">
                       <label for="clientName">Client Name:</label><br/>
                       <input type="text" id="clientName" name="clientName"/><br/>
                       <label for="clientAddress">Delivery Address:</label><br/>
                       <textarea cols="40" rows="3" id="clientAddress" name="clientAddress"></textarea><br/>
                       <a href="/confirmationInfo.html">Submit</a>
                   </form>

               </section>
               <aside>
                   <table>
                       <tr>
                           <th colspan="2">
                               Your Order Status
                           </th>
                       </tr>

                       <tr>
                           <td><b>Balloon Color </b></td>
                           <td>Red Balloon</td>
                       </tr>
                       <tr>
                           <td><b>Balloon Size </b></td>
                           <td>Large</td>
                       </tr>
                   </table>
               </aside>
           </body>
       </html>

    Страната генерирана од овој сервлет има Submit копче кое не’ носи на сервлетот со локација /ConfirmationInfo.

    Да се креира сервлет со име ConfirmationInfoServlet, мапиран на патеката /ConfirmationInfo.
        Овој сервлет треба да го испечати пребарувачот и оперативниот систем на корисникот, неговото име, адреса, бојата и големината на балонот кој го избрал корисникот.
        Копчето Log out треба да ја поништи тековната сесија на корисникот и да го редиректира на првата страница /.
        Прилагодете го фајлот confirmationInfo.html за изгледот на оваа страница.

    <html>
    <head>
        <meta charset="utf-8">
        <title>WP lab - Confirmation Info</title>
        <style type="text/css">
            body {
                width: 800px;
                margin: auto;
            }
            table {
                width:100%;
            }
            table, td, th {
                border: 1px solid black;
                padding: 3px 2px;
            }
        </style>
    </head>
    <body>
    <section>
        <header>
            <h1>Balloon Order page - Order confirmation </h1>
        </header>
        <table>
            <tr>
                <th colspan="2">
                    Your Order Status
                </th>
            </tr>
            <tr>
                <td><b>Client Name </b></td>
                <td>Petko Petkov</td>
            </tr>
            <tr>
                <td><b>Client Address </b></td>
                <td>Partizanska 5, Skopje</td>
            </tr>
            <tr>
                <td><b>Client IP Address</b></td>
                <td>127.0.0.1</td>
            </tr>
            <tr>
                <td><b>Client Browser</b></td>
                <td>Mozilla</td>
            </tr>
            <tr>
                <td><b>Balloon Color </b></td>
                <td>Red Balloon</td>
            </tr>
            <tr>
                <td><b>Balloon Size </b></td>
                <td>Large</td>
            </tr>
        </table>
        <div>
            <a href="/">Log out</a>
        </div>


    </section>
    </body>
    </html>

    Освен за чекорот за селекција на боја на балон, за сите останати сервлети овозможете проверка за тоа дали е избрана бојата на балонот во првиот чекор. Во случаите кога нема селектирано боја на балон, потребно е да направите редирекција на страната за приказ на овозможени бои на балонот. Што ќе искористите за имплементација на оваа функционалност?

При тестирање проверете

    Тестирајте го проектот во Google Chrome. Отворете ја конзолата со притискање на: Control (CTRL) + Shift + J и одете во делот Network.
    Кои се параметрите кои ги испраќаме до секој од сервлетите?
        BalloonOrder:___________________________________________________
        ConfirmationInfo:__________________________________________________
    Наведете ги колачињата при секое од барањата. Кога се креираат за прв пат?______________________________________________________________________

